require "pyramid_params.jahh"
require "fips202_KeccakF1600_StatePermute.jahh"
require "fips202_load64.jahh"

inline fn keccak_absorb_256_HPRG_INLEN(reg ptr u64[25] s, reg ptr u8[HPRG_INLEN] m) -> reg ptr u64[25]
{
	inline int i;
	inline int j;
	inline int iterations;
	inline int handled;
	inline int remainder;

	reg u8 t8;

	reg u64 t64;

	stack u8[200] t;

	iterations = HPRG_INLEN / SHAKE256_RATE;
	handled = iterations * SHAKE256_RATE;
	remainder = HPRG_INLEN - handled;

	for j = 0 to iterations {
		for i = 0 to (SHAKE256_RATE / 8) {
			t64 = load64(m[j * SHAKE256_RATE + 8 * i:8]);
			s[i] ^= t64;
		}

		s = KeccakF1600_StatePermute(s);
	}

	for i = 0 to SHAKE256_RATE {
		t[i] = 0;
	}

	for i = 0 to remainder {
		t8 = m[handled + i];
		t[i] = t8;
	}

	t[remainder] = 0x1F;
	t[SHAKE256_RATE - 1] |= 128;

	for i = 0 to (SHAKE256_RATE / 8) {
		t64 = load64(t[8 * i:8]);
		s[i] ^= t64;
	}

	return s;
}